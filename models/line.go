package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Line line
// swagger:model Line
type Line struct {

	// The common name of the line, without specifing the direction
	CommonName string `json:"common_name,omitempty"`

	// line type
	LineType interface{} `json:"line_type,omitempty"`
}

// Validate validates this line
func (m *Line) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLineType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var lineTypeLineTypePropEnum []interface{}

func init() {
	var res []interface{}
	if err := json.Unmarshal([]byte(`["Bus","Tram","Trolley","Subway"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lineTypeLineTypePropEnum = append(lineTypeLineTypePropEnum, v)
	}
}

// prop value enum
func (m *Line) validateLineTypeEnum(path, location string, value interface{}) error {
	if err := validate.Enum(path, location, value, lineTypeLineTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Line) validateLineType(formats strfmt.Registry) error {

	if swag.IsZero(m.LineType) { // not required
		return nil
	}

	return nil
}
